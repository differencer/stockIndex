<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lt.stock.mapper.StockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.lt.stock.pojo.entity.StockRtInfo">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="stockCode" column="stock_code" jdbcType="CHAR"/>
        <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
        <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
        <result property="openPrice" column="open_price" jdbcType="DECIMAL"/>
        <result property="preClosePrice" column="pre_close_price" jdbcType="DECIMAL"/>
        <result property="curPrice" column="cur_price" jdbcType="DECIMAL"/>
        <result property="maxPrice" column="max_price" jdbcType="DECIMAL"/>
        <result property="minPrice" column="min_price" jdbcType="DECIMAL"/>
        <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
        <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,cur_time,
        stock_name,open_price,pre_close_price,
        cur_price,max_price,min_price,
        trade_amount,trade_volume
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_rt_info
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from stock_rt_info
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lt.stock.pojo.entity.StockRtInfo"
            useGeneratedKeys="true">
        insert into stock_rt_info
        ( id, stock_code, cur_time
        , stock_name, open_price, pre_close_price
        , cur_price, max_price, min_price
        , trade_amount, trade_volume)
        values ( #{id,jdbcType=VARCHAR}, #{stockCode,jdbcType=CHAR}, #{curTime,jdbcType=TIMESTAMP}
               , #{stockName,jdbcType=VARCHAR}, #{openPrice,jdbcType=DECIMAL}, #{preClosePrice,jdbcType=DECIMAL}
               , #{curPrice,jdbcType=DECIMAL}, #{maxPrice,jdbcType=DECIMAL}, #{minPrice,jdbcType=DECIMAL}
               , #{tradeAmount,jdbcType=BIGINT}, #{tradeVolume,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lt.stock.pojo.entity.StockRtInfo"
            useGeneratedKeys="true">
        insert into stock_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="stockCode != null">stock_code,</if>
            <if test="curTime != null">cur_time,</if>
            <if test="stockName != null">stock_name,</if>
            <if test="openPrice != null">open_price,</if>
            <if test="preClosePrice != null">pre_close_price,</if>
            <if test="curPrice != null">cur_price,</if>
            <if test="maxPrice != null">max_price,</if>
            <if test="minPrice != null">min_price,</if>
            <if test="tradeAmount != null">trade_amount,</if>
            <if test="tradeVolume != null">trade_volume,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=VARCHAR},</if>
            <if test="stockCode != null">#{stockCode,jdbcType=CHAR},</if>
            <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
            <if test="stockName != null">#{stockName,jdbcType=VARCHAR},</if>
            <if test="openPrice != null">#{openPrice,jdbcType=DECIMAL},</if>
            <if test="preClosePrice != null">#{preClosePrice,jdbcType=DECIMAL},</if>
            <if test="curPrice != null">#{curPrice,jdbcType=DECIMAL},</if>
            <if test="maxPrice != null">#{maxPrice,jdbcType=DECIMAL},</if>
            <if test="minPrice != null">#{minPrice,jdbcType=DECIMAL},</if>
            <if test="tradeAmount != null">#{tradeAmount,jdbcType=BIGINT},</if>
            <if test="tradeVolume != null">#{tradeVolume,jdbcType=DECIMAL},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.lt.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        <set>
            <if test="stockCode != null">
                stock_code = #{stockCode,jdbcType=CHAR},
            </if>
            <if test="curTime != null">
                cur_time = #{curTime,jdbcType=TIMESTAMP},
            </if>
            <if test="stockName != null">
                stock_name = #{stockName,jdbcType=VARCHAR},
            </if>
            <if test="openPrice != null">
                open_price = #{openPrice,jdbcType=DECIMAL},
            </if>
            <if test="preClosePrice != null">
                pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
            </if>
            <if test="curPrice != null">
                cur_price = #{curPrice,jdbcType=DECIMAL},
            </if>
            <if test="maxPrice != null">
                max_price = #{maxPrice,jdbcType=DECIMAL},
            </if>
            <if test="minPrice != null">
                min_price = #{minPrice,jdbcType=DECIMAL},
            </if>
            <if test="tradeAmount != null">
                trade_amount = #{tradeAmount,jdbcType=BIGINT},
            </if>
            <if test="tradeVolume != null">
                trade_volume = #{tradeVolume,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lt.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        set stock_code      = #{stockCode,jdbcType=CHAR},
            cur_time        = #{curTime,jdbcType=TIMESTAMP},
            stock_name      = #{stockName,jdbcType=VARCHAR},
            open_price      = #{openPrice,jdbcType=DECIMAL},
            pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
            cur_price       = #{curPrice,jdbcType=DECIMAL},
            max_price       = #{maxPrice,jdbcType=DECIMAL},
            min_price       = #{minPrice,jdbcType=DECIMAL},
            trade_amount    = #{tradeAmount,jdbcType=BIGINT},
            trade_volume    = #{tradeVolume,jdbcType=DECIMAL}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="getStockUpDownAllLimit" resultType="com.lt.stock.pojo.vo.StockUpDownResponseVo">
        select sri.trade_amount                                            as tradeAmt,
               sri.pre_close_price                                         as preClosePrice,
               (sri.max_price - sri.min_price) / sri.pre_close_price       as amplitude,
               sri.stock_code                                              as code,
               sri.stock_name                                              as name,
               date_format(sri.cur_time, '%Y%m%d')                         as curDate,
               sri.trade_volume                                            as tradeVol,
               (sri.cur_price - sri.pre_close_price)                       as upDown,
               (sri.cur_price - sri.pre_close_price) / sri.pre_close_price as increase,
               sri.cur_price                                               as tradePrice
        from stock_rt_info as sri
        where sri.cur_time = #{curTime}
        order by upDown desc
        limit 10;
    </select>

    <select id="getStockUpDownAll" resultType="com.lt.stock.pojo.vo.StockUpDownResponseVo">
        select sri.trade_amount                                            as tradeAmt,
               sri.pre_close_price                                         as preClosePrice,
               (sri.max_price - sri.min_price) / sri.pre_close_price       as amplitude,
               sri.stock_code                                              as code,
               sri.stock_name                                              as name,
               date_format(sri.cur_time, '%Y%m%d')                         as curDate,
               sri.trade_volume                                            as tradeVol,
               sri.cur_price - sri.pre_close_price                         as increase,
               (sri.cur_price - sri.pre_close_price) / sri.pre_close_price as upDown,
               sri.cur_price                                               as tradePrice
        from stock_rt_info as sri
        order by sri.cur_time desc, upDown desc
    </select>

    <select id="getStockUpDownCount" resultType="java.util.Map">
        select
        date_format(tmp.cur_time, '%Y%m%d%H%i') as time,
        count(*) as count
        from (
        select
        sri.cur_time,
        (sri.cur_price - sri.pre_close_price) / sri.pre_close_price as updown
        from stock_rt_info sri
        where sri.cur_time between #{startTime} and #{endTime}
        having
        <if test="flag == 1">
            updown >= 0.1
        </if>
        <if test="flag == 2">
            updown &lt;= -0.1
        </if>
        ) as tmp
        group by tmp.cur_time
        order by tmp.cur_time asc;
    </select>

    <insert id="insertBatch">
        insert into stock_rt_info
        (id,stock_code,cur_time
        ,stock_name,open_price,pre_close_price
        ,cur_price,max_price,min_price
        ,trade_amount,trade_volume)
        values
        <foreach collection="list" item="si" separator=",">
            (#{si.id,jdbcType=BIGINT},#{si.stockCode,jdbcType=CHAR},#{si.curTime,jdbcType=TIMESTAMP}
            ,#{si.stockName,jdbcType=VARCHAR},#{si.openPrice,jdbcType=DECIMAL},#{si.preClosePrice,jdbcType=DECIMAL}
            ,#{si.curPrice,jdbcType=DECIMAL},#{si.maxPrice,jdbcType=DECIMAL},#{si.minPrice,jdbcType=DECIMAL}
            ,#{si.tradeAmount,jdbcType=BIGINT},#{si.tradeVolume,jdbcType=DECIMAL})
        </foreach>
    </insert>

    <select id="getStockSearch" resultType="com.lt.stock.pojo.vo.StockSearchResponseVo">
        select distinct sri.stock_code as code, sri.stock_name as name
        from stock_rt_info sri
        where sri.stock_code like concat('%', #{code}, '%')
    </select>


    <!--
      功能描述：统计每周内的股票数据信息，信息包含：
      股票ID、 一周内最高价、 一周内最低价 、周1开盘价、周5的收盘价、
      整周均价、以及一周内最大交易日期（一般是周五所对应日期）;
  -->
    <resultMap id="getRtStockWeeklineMap" type="com.lt.stock.pojo.vo.WeeklineVo">
        <result column="stock_code" property="stock_code"/>
    </resultMap>

    <select id="getRtStockWeekline" resultMap="getRtStockWeeklineMap">
        SELECT
            tmp.avgPrice as avgPrice,
            tmp.minPrice as minPrice,
            sri1.open_price as openPrice,
            tmp.maxPrice as maxPrice,
            sri2.cur_price as closePrice,
            DATE_FORMAT(tmp.maxDate,'%y%m%d') as mxTime,
            tmp.code as stock_code
        from stock_rt_info sri1
                 inner join stock_rt_info sri2
                 inner join (select
                                 min(sri.cur_time) as minDate,
                                 max( sri.cur_time ) as maxDate,
                                 max(cur_price) as maxPrice,
                                 avg(cur_price) as avgPrice,
                                 min(cur_price) as minPrice,
                                 stock_code as code
                             from
                                 stock_rt_info as sri
                             where
                                 sri.stock_code =#{code}
                             group by
                                 date_format( sri.cur_time, '%y%U')
        )tmp
                            on sri1.stock_code = tmp.code and sri1.cur_time =tmp.minDate and sri2.stock_code =tmp.code and sri2.cur_time = tmp.maxDate;
    </select>





    <select id="queryStockRtLastTradeInfo" resultType="com.lt.stock.pojo.vo.StockRtLastTradeInfo">
        SELECT
            DATE_FORMAT( cur_time, '%Y%m%d%H%i' ) AS date,
            trade_amount AS tradeAmt,
            trade_volume AS tradeVol,
            cur_price AS tradePrice
        FROM
            stock_rt_info
        where stock_rt_info.stock_code = #{code}

        ORDER BY
            cur_time DESC
            LIMIT 10;
    </select>

</mapper>
